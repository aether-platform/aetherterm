# AetherTerm OpenObserve Configuration
# Based on endpoint exploration results

# Enable OpenTelemetry
OTEL_ENABLED=true
OTEL_SERVICE_NAME=aetherterm-backend
OTEL_SERVICE_VERSION=1.0.0

# OpenObserve Configuration (re-x organization)
# Credentials: kaz@re-x.info / c8KGNeJfJIbZqFu7
OTEL_EXPORTER_OTLP_TRACES_ENDPOINT=https://api.openobserve.ai/api/re-x/v1/traces
OTEL_EXPORTER_OTLP_LOGS_ENDPOINT=https://api.openobserve.ai/api/re-x/v1/logs
OTEL_EXPORTER_OTLP_HEADERS="Authorization=Basic a2F6QHJlLXguaW5mbzpjOEtHTmVKZkpJYlpxRnU3"

# Alternative endpoints to try if re-x specific fails:
# OTEL_EXPORTER_OTLP_TRACES_ENDPOINT=https://api.openobserve.ai/api/default/v1/traces
# OTEL_EXPORTER_OTLP_TRACES_ENDPOINT=https://api.openobserve.ai/v1/traces

# Debug settings
OTEL_DEBUG=true
OTEL_SAMPLE_RATE=1.0

# Additional attributes
DEPLOYMENT_ENV=production
ORGANIZATION=re-x

# OpenObserve Web UI
# URL: https://api.openobserve.ai/web/
# Login: kaz@re-x.info
# Password: c8KGNeJfJIbZqFu7
# Organization: re-x (if applicable)

# Usage:
# 1. Copy this to .env
# 2. Start AetherTerm: OTEL_ENABLED=true uv run python src/aetherterm/agentserver/main.py
# 3. Open OpenObserve UI and check for traces
