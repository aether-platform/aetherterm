class a{static TOKEN_KEY="aetherterm_workspace_token";static TOKEN_LENGTH=32;static generateToken(){const e=new Uint8Array(this.TOKEN_LENGTH);return crypto.getRandomValues(e),Array.from(e,t=>t.toString(16).padStart(2,"0")).join("")}static getOrCreateToken(){let e=localStorage.getItem(this.TOKEN_KEY);return e?console.log("ðŸ“‹ WORKSPACE: Using existing workspace token:",e):(e=this.generateToken(),localStorage.setItem(this.TOKEN_KEY,e),console.log("ðŸ“‹ WORKSPACE: Generated new workspace token:",e)),e}static getToken(){return localStorage.getItem(this.TOKEN_KEY)}static clearToken(){localStorage.removeItem(this.TOKEN_KEY),console.log("ðŸ“‹ WORKSPACE: Cleared workspace token")}static isValidToken(e){return/^[0-9a-f]{64}$/.test(e)}}export{a as WorkspaceTokenManager};
