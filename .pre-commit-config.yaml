# See https://pre-commit.com for more information
# See https://pre-commit.com/hooks.html for more hooks
default_language_version:
  python: python3.11
  node: "20.11.0"

# Configure pre-commit to run on specific stages
default_stages: [commit, push]

# Files to exclude
exclude: |
  (?x)^(
    frontend/dist/|
    src/aetherterm/agentserver/static/|
    build/|
    dist/|
    \.eggs/|
    .*\.egg-info/|
    __pycache__/|
    \.git/|
    \.venv/|
    venv/|
    node_modules/
  )

repos:
  # General file checks
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.5.0
    hooks:
      - id: trailing-whitespace
        args: [--markdown-linebreak-ext=md]
      - id: end-of-file-fixer
      - id: check-yaml
        args: [--allow-multiple-documents]
      - id: check-json
      - id: check-toml
      - id: check-added-large-files
        args: ["--maxkb=1000"]
      - id: check-case-conflict
      - id: check-merge-conflict
      - id: check-symlinks
      - id: check-executables-have-shebangs
      - id: check-shebang-scripts-are-executable
      - id: detect-private-key
      - id: mixed-line-ending
        args: [--fix=lf]
      - id: no-commit-to-branch
        args: [--branch, main, --branch, master]

  # Python specific hooks
  - repo: https://github.com/astral-sh/ruff-pre-commit
    rev: v0.3.5
    hooks:
      # Run the linter
      - id: ruff
        args: [--fix]
        types_or: [python, pyi, jupyter]
      # Run the formatter
      - id: ruff-format
        types_or: [python, pyi, jupyter]

  # Python type checking
  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v1.9.0
    hooks:
      - id: mypy
        additional_dependencies:
          - types-requests
          - types-click
          - types-setuptools
          - types-redis
          - types-pyOpenSSL
        args: [--config-file=pyproject.toml]
        pass_filenames: false
        args: [src/]

  # Python security checks
  - repo: https://github.com/PyCQA/bandit
    rev: 1.7.8
    hooks:
      - id: bandit
        args: [-c, pyproject.toml, -ll, -r, src/]
        exclude: tests/

  # Python docstring checks
  - repo: https://github.com/PyCQA/pydocstyle
    rev: 6.3.0
    hooks:
      - id: pydocstyle
        additional_dependencies: [toml]
        args: [--convention=google]
        exclude: tests/

  # JavaScript/TypeScript linting with ESLint
  - repo: https://github.com/pre-commit/mirrors-eslint
    rev: v8.57.0
    hooks:
      - id: eslint
        files: \.(js|jsx|ts|tsx|vue)$
        types: [file]
        args: [--fix, --max-warnings=0]
        additional_dependencies:
          - eslint@8.57.0
          - "@typescript-eslint/parser@7.2.0"
          - "@typescript-eslint/eslint-plugin@7.2.0"
          - "eslint-plugin-vue@9.23.0"
          - "eslint-config-prettier@9.1.0"
        exclude: |
          (?x)^(
            frontend/dist/|
            src/aetherterm/agentserver/static/
          )

  # Prettier formatting for JS/TS/Vue/CSS/SCSS
  - repo: https://github.com/pre-commit/mirrors-prettier
    rev: v3.1.0
    hooks:
      - id: prettier
        types_or: [javascript, jsx, ts, tsx, vue, css, scss, sass, json, yaml, markdown]
        args: [--write, --config, frontend/.prettierrc.json]
        exclude: |
          (?x)^(
            frontend/dist/|
            src/aetherterm/agentserver/static/|
            pnpm-lock\.yaml$
          )

  # Shell script checks
  - repo: https://github.com/shellcheck-py/shellcheck-py
    rev: v0.10.0.1
    hooks:
      - id: shellcheck
        args: [-x]

  # Dockerfile linting
  - repo: https://github.com/hadolint/hadolint
    rev: v2.12.0
    hooks:
      - id: hadolint-docker
        args: [--ignore, DL3008, --ignore, DL3009]

  # YAML linting
  - repo: https://github.com/adrienverge/yamllint
    rev: v1.35.1
    hooks:
      - id: yamllint
        args: [-c=.yamllint.yaml]

  # Markdown linting
  - repo: https://github.com/igorshubovych/markdownlint-cli
    rev: v0.39.0
    hooks:
      - id: markdownlint
        args: [--config, .markdownlint.json]

  # Secret detection
  - repo: https://github.com/Yelp/detect-secrets
    rev: v1.4.0
    hooks:
      - id: detect-secrets
        args: [--baseline, .secrets.baseline]

  # License header checks
  - repo: https://github.com/Lucas-C/pre-commit-hooks
    rev: v1.5.5
    hooks:
      - id: insert-license
        name: Add license header (Python)
        files: \.py$
        exclude: |
          (?x)^(
            tests/|
            setup\.py$|
            __pycache__/
          )
        args:
          - --license-filepath
          - .license-header.txt
          - --comment-style
          - "#"

# Configuration for CI environments
ci:
  autofix_commit_msg: |
    [pre-commit.ci] auto fixes from pre-commit.com hooks

    for more information, see https://pre-commit.ci
  autofix_prs: true
  autoupdate_branch: ""
  autoupdate_commit_msg: "[pre-commit.ci] pre-commit autoupdate"
  autoupdate_schedule: weekly
  skip: [no-commit-to-branch]
  submodules: false