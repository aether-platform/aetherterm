# AetherTerm OpenTelemetry Configuration
# Copy this file to .env and customize for your environment

# Enable OpenTelemetry
OTEL_ENABLED=true

# Service Information
OTEL_SERVICE_NAME=aetherterm-backend
OTEL_SERVICE_VERSION=1.0.0

# OpenTelemetry Configuration
# Configure based on your monitoring system

# === Jaeger (Local Development) ===
# OTEL_EXPORTER_OTLP_TRACES_ENDPOINT=http://localhost:14268/api/traces
# OTEL_EXPORTER_OTLP_HEADERS=""

# === Grafana Cloud ===
# OTEL_EXPORTER_OTLP_TRACES_ENDPOINT=https://otlp-gateway-prod-us-central-0.grafana.net/otlp/v1/traces
# OTEL_EXPORTER_OTLP_HEADERS="Authorization=Basic <base64-encoded-credentials>"

# === DataDog ===
# OTEL_EXPORTER_OTLP_TRACES_ENDPOINT=https://trace.agent.datadoghq.com/v1/traces
# DD_API_KEY=your-datadog-api-key

# === Console Output (Development/Debug) ===
# OTEL_TRACES_EXPORTER=console
# OTEL_LOGS_EXPORTER=console

# === Custom OTLP Endpoint ===
OTEL_EXPORTER_OTLP_TRACES_ENDPOINT=http://localhost:4318/v1/traces
OTEL_EXPORTER_OTLP_LOGS_ENDPOINT=http://localhost:4318/v1/logs
# OTEL_EXPORTER_OTLP_HEADERS="Authorization=Bearer your-token"

# Additional Configuration
OTEL_DEBUG=false
OTEL_SAMPLE_RATE=1.0
DEPLOYMENT_ENV=development

# Socket.IO Tracking (for debugging)
SOCKET_TRACKING_ENABLED=true

# Frontend Telemetry Configuration
# Configure to match your telemetry backend
VITE_TELEMETRY_ENABLED=true
VITE_TELEMETRY_ENDPOINT=http://localhost:4318/v1/traces
# VITE_TELEMETRY_HEADERS=""

# Examples for different setups:

# === Disable telemetry ===
# OTEL_ENABLED=false

# === Prometheus Metrics Only ===
# OTEL_ENABLED=true
# OTEL_METRICS_EXPORTER=prometheus
# OTEL_EXPORTER_PROMETHEUS_PORT=9090

# === File Export (for testing) ===
# OTEL_TRACES_EXPORTER=file
# OTEL_LOGS_EXPORTER=file
# OTEL_EXPORTER_FILE_PATH=./telemetry-output.json